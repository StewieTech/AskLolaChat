const userRepository = require('../repositories/UserRepository')

/**
 * @param {Object} userData
 */

const registerUserData = async (userData) => {
    const existingUser = await userRepository.findUserByEmail(userData.emailId);

    if (existingUser) {
        throw new Error('User with this email already exists');
    }

    return await userRepository.createUser(userData);
};

/**
 * @param {String} emailId
 * @param {String} password
 */

const authenticatedUser = async (emailId, password) => {
    const user = await userRepository.findUserByEmail(emailId);

    if (!user) {
        throw new Error('User not found');
    }

    if (user.password !== password) {
        throw new Error('Invalid credentials');
    }

    return user
};


/**
 * @param {Object} updateData
 */

const updateUserDetails = async (userId, updateData) => {
    return await userRepository.updateUserById(userId, updateData);
};

/**
 * 
 * @param userId 
 * @returns {Object}
 */

const deleteUserAccount = async (userId) => {
    return await userRepository.deleteUserById(userId);
};


module.exports = { registerUserData, authenticatedUser, updateUserDetails, deleteUserAccount, };